#!/usr/bin/env perl

use Getopt::Std;
use Config::IniFiles;
use JEvent::RDF;
use DCM;
use Unicode::String qw(latin1 utf8);

my $usage=<<EOU;
Usage: $0 [-h] -c agent.ini

$0 Sample JEvent agent

SYNOPSIS

\t-c\tINI-style configuration file for this agent.
\t-h\tShow this text

Apart from the common ini-parameters this agents expects information
about the connection to LDAP:

[LDAP]
Server=<ldap server>
SASLMech=SASL Mechanism (defaults to GSSAPI)
BindDN=<ldap DN to bind as>
EOU

getopts('c:h:t:');
die $usage if $opt_h;
die $usage unless $opt_c;

die $usage unless -f $opt_c;

my $ini = Config::IniFiles->new(-file=>$opt_c)
  or die "Unable to read $opt_c\n";
my $dcm = DCM::Secure::SASL->new($ini->val('LDAP','Server'),
				 version=>3,
				 BindDN=>$ini->val('LDAP','BindDN'));

sub _sync
  {
    my ($self,$model,$o) = @_;
    my $dcm = $self->{Data};

    my $id = $model->getObjects($o->getURI,"urn:x-su:jevent:directory:entry:identifier")->[0];
    my $v = $model->getObjects($id->getURI,"urn:x-su:jevent:directory:attribute:value")->[0];
    my @a = split /:/,$id->getURI();
    my $a = pop @a;
    my $filter = "($a=".$v->getValue().")";

    my %mods;
    
    foreach my $m (@{$model->getObjects($o->getURI,"urn:x-su:jevent:directory:entry:modify")})
      {
	my $stmts = $model->getStmts($m);
	for (my $s = $stmts->getFirst(); defined $s; $s = $stmts->getNext())
	  {
	    push(@{$mods{$s->getPredicate->getURI}},$s->getObject->getValue());
	  }
	$stmts->close();
      }

    $dcm->{DryRun};

    foreach (keys %mods)
      {
	printf "%s: %s\n",$_,join(',',@{$mods{$_}})
      }
  }

my $host = Sys::Hostname::hostname();
my $je = JEvent::RDF->new(Config=>$ini,
			  Commands=>{
				     shutdown => sub {
				       my ($self,$from,$type,$cmd,@args) = @_;
				       $self->LogInfo("Got shutdown from $_[1]");
				       warn "Got shutdown from $_[1]. Bye...\n";
				       exit;
				     },
				    },
			  RDFCB => sub {
			    my ($self,$model) = @_;
			    #warn $self->serialize($model);
			    my $entries = $model->getObjects("urn:x-su:jevent:directory","urn:x-su:jevent:directory:includes");
			    return unless ref $entries eq 'ARRAY';
			    
			    foreach my $o (@{$entries})
			      {
				_sync($self,$model,$o);
			      }
			  });

$je->Run(Data=>$dcm);
