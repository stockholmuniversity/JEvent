#!/usr/bin/env perl

use Getopt::Std;
use JEvent;
use XML::Simple;

my $usage=<<EOU;
Usage: $0 [-h] -c agent.ini

$0 Sample JEvent agent

SYNOPSIS

\t-c\tINI-style configuration file for this agent.
\t-h\tShow this text
\t-n\tThe path to the nagios cmd file

EOU

getopts('c:h:n');
die $usage if $opt_h;
die $usage unless $opt_c;

die $usage unless -f $opt_c;

my $ini = Config::IniFiles->new(-file=>$opt_c)
  or die "Unable to read configuration from $opt_c: $!\n";

my $state = {};

# <ticket/>

sub _cmd
{
	my ($cmd,@args) = @_;
	
	open CMDF,">$opt_n" 
		or die "Unable to open $opt_n for writing: $!\n";
	my $ts = scalar time(); 
	my $cmd = sprintf "[%s] %s;%s\n",$ts,uc($cmd),join(';',@args);
	print CMDF $cmd;
	close CMDF;
	
	return "ok";
}

my $host = Sys::Hostname::hostname();
my $je = JEvent->new(Config=>$ini,
		     Commands=>{
				shutdown => sub {
				  my ($self,$from,$type,$cmd,@args) = @_;
				  $self->LogInfo("Got shutdown from $_[1]");
				  warn "Got shutdown from $_[1]. Bye...\n";
				  exit;
				},
				nagios => sub {
				  my ($self,$from,$type,$cmd,@args) = @_;
				  _cmd(@args);
				},
				enable => sub {
				  my ($self,$from,$type,$cmd,@args) = @_;
				  _cmd('ENABLE_HOST_NOTIFICATIONS',@args);
				},
				disable => sub {
				  my ($self,$from,$type,$cmd,@args) = @_;
				  _cmd('DISBLE_HOST_NOTIFICATIONS',@args);
				}
			 },
		     EventCB=>sub {
		     	my ($self,$sid,$msg) = @_;
		     }
		 );

$je->Run();
